name: Deploy

on:
  issue_comment:
    types: [created]

permissions:
  pull-requests: write
  deployments: write
  issues: write
  contents: write
  checks: read
  statuses: read

jobs:
  branch-deploy:
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    outputs:
      continue: ${{ steps.branch-deploy.outputs.continue }}
      ref: ${{ steps.branch-deploy.outputs.ref }}
    steps:
      - name: Branch Deploy
        id: branch-deploy
        uses: github/branch-deploy@v9.5.0
        with:
          trigger: '.deploy'
          environment: 'production'
          skip_ci: 'false'

      - name: Checkout PR branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ steps.branch-deploy.outputs.sha }}

      - name: Setup pnpm
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          run_install: false

      - name: Setup Node.js
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
          scope: '@lacolaco'

      - name: Install dependencies
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        run: pnpm install --frozen-lockfile

      - name: Build project
        if: ${{ steps.branch-deploy.outputs.continue == 'true' }}
        run: pnpm run build

      - name: Publish to npm
        if: ${{ steps.branch-deploy.outputs.continue == 'true' && steps.branch-deploy.outputs.noop != 'true' }}
        run: pnpm publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
